import org.jenkinsci.plugins.gitclient.GitClient

def checkout_source (repo_name, branch_name){
    checkout([$class: 'GitSCM', \
          branches: [[name: "${branch_name}"]],
          doGenerateSubmoduleConfigurations: false, \
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${repo_name}"], \
                         [$class: 'CleanBeforeCheckout']], \
            submoduleCfg: [], \
            userRemoteConfigs: [[credentialsId: "${cred_id}", \
                                    url: "git@github.com:swapnilz30/${repo_name}.git"]]])
}

node {
    // This displays colors using the 'xterm' ansi color map.
    ansiColor('xterm') {
        // Just some echoes to show the ANSI color.
        stage "\u001B[31mI'm Red\u001B[0m Now not"
    }
}

def str_name = 'This is function fn1.'
def build_id = "$env.BUILD_ID"
def jenkins_build_path = "/Users/Shared/Jenkins/Home/workspace/Pipeline/git-code"
def job_name=''

def git_clone(repo_name,jenkins_build_path) {
    echo "jenkins_build_path: ${jenkins_build_path}"
    // sh "rm -rf ${jenkins_build_path}/${repo_name}"
     sh "git clone git@github.com:swapnilz30/${repo_name}.git ${jenkins_build_path}"
}

def  fn1(str_name,build_id,job_name) {
  echo "$job_name"
  echo "$str_name"
  echo "$build_id"
  if ( params.job_name != null )
  {
     def buildNumber = Jenkins.instance.getItem("${job_name}").lastSuccessfulBuild.number
     echo "ansible: ${buildNumber}"
  }
  else
  {
    echo "Options are not selected."
  }
}

node {
  //branch_name = "refs/heads/"
  cred_id='UnZGVkW9C8hyuvS#!@d!oLdJ5PDYaCRL#YYfaMf$#9&zn4'
  parameters {
        booleanParam(defaultValue: true, description: '', name: 'ansible')
        booleanParam(defaultValue: true, description: '', name: 'copy_files')
    }

    def build_url = "${env.BUILD_URL}"
    stage ('one') {
       echo "Start if condition"
       if ( "${params.ansible}" == 'true' )
       {
           job_name='ansible'
       }
       else
       {
          job_name=''
       }
       if ( "${params.copy_files}" == 'true' )
       {
           job_name='copy_files'
       }
       else
       {
          job_name=''
       }
       echo "End if condition"
       fn1(str_name,build_id,job_name)
       echo "${build_url}"
       echo "flag: ${params.ansible}"
    }
    stage ('python') {
      def repo_name = 'python'
      def branch_name = 'refs/heads/master'
      //checkout_source("${repo_name}","${branch_name}")
      git_clone(repo_name,jenkins_build_path)
    }
}