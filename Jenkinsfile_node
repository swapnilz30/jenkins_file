node {
    // This displays colors using the 'xterm' ansi color map.
    ansiColor('xterm') {
        // Just some echoes to show the ANSI color.
        stage "\u001B[31mI'm Red\u001B[0m Now not"
    }
}

def str_name = 'This is function fn1.'
def build_id = "$env.BUILD_ID"
def jenkins_build_path = "/Users/swapnil/git-code"
def job_name=''

def git_clone(repo_name,jenkins_build_path) {
    echo "jenkins_build_path: ${jenkins_build_path}"
    // sh "rm -rf ${jenkins_build_path}/${repo_name}"
     sh "git clone git@github.com:swapnilz30/${repo_name}.git ${jenkins_build_path}/${repo_name}"
}

def  fn1(str_name,build_id,job_name) {
  echo "$job_name"
  echo "$str_name"
  echo "$build_id"
  if ( params.buildNumber != null )
  {
     def buildNumber = Jenkins.instance.getItem("${job_name}").lastSuccessfulBuild.number
  }

  echo "ansible: ${buildNumber}"

}

node {

  parameters {
        booleanParam(defaultValue: true, description: '', name: 'ansible')
        booleanParam(defaultValue: true, description: '', name: 'copy_files')
    }

    def build_url = "${env.BUILD_URL}"
    stage ('one') {
       echo "Start if condition"
       if ( "${params.ansible}" == 'true' )
       {
           job_name='ansible'
       }
       if ( "${params.copy_files}" == 'true' )
       {
           job_name='copy_files'
       }
       echo "End if condition"
       fn1(str_name,build_id,job_name)
       echo "${build_url}"
       echo "flag: ${params.ansible}"
    }
    /*stage ('python') {
      def repo_name = 'python'

      git_clone(repo_name,jenkins_build_path)
    }*/
}